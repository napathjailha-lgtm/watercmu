// src/App.js
import React, { useState, useEffect } from 'react';
import { BrowserRouter as Router, Routes, Route, Navigate, Outlet } from 'react-router-dom';
import axios from 'axios';
import Login from './components/Login';
import WaterSourceSelection from './components/WaterSourceSelection';
import AdminDashboard from './components/AdminDashboard';
import UserDashboard from './components/UserDashboard';
import VillageSettings from './components/VillageSettings';
import WaterMeterManagement from './components/WaterMeterManagement';
import MeterReadings from './components/MeterReadings';
import ZoneManagement from './components/ZoneManagement'; // ‡πÄ‡∏û‡∏¥‡πà‡∏° import

import BillingManagement from './components/BillingManagement';
import PaymentManagement from './components/PaymentManagement';
import EquipmentManagement from './components/EquipmentManagement';
import ReportsAnalytics from './components/ReportsAnalytics';
import UserManagement from './components/UserManagement';
import MainLayout from './components/MainLayout';
import VillageManage from './components/VillageManage';
import LoadingSpinner from './components/common/LoadingSpinner';
import eventBus from './utils/eventBus';

import './App.css';

// Component ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÅ‡∏û‡πá‡∏Ñ‡πÄ‡∏Å‡∏à
const PackageAlert = ({ packageInfo, onClose, onMarkAsRead, user }) => {
  if (!packageInfo) return null;

  const getStatusColor = (status) => {
    switch (status) {
      case 'EXPIRED': return 'bg-red-100 border-red-500 text-red-700';
      case 'CRITICAL': return 'bg-orange-100 border-orange-500 text-orange-700';
      case 'WARNING': return 'bg-yellow-100 border-yellow-500 text-yellow-700';
      default: return 'bg-green-100 border-green-500 text-green-700';
    }
  };

  const getStatusIcon = (status) => {
    switch (status) {
      case 'EXPIRED': return 'üî¥';
      case 'CRITICAL': return 'üü†';
      case 'WARNING': return 'üü°';
      default: return 'üü¢';
    }
  };

  const getStatusMessage = (status, daysUntilExpiry) => {
    switch (status) {
      case 'EXPIRED': return '‡πÅ‡∏û‡πá‡∏Ñ‡πÄ‡∏Å‡∏à‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡πÅ‡∏•‡πâ‡∏ß ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡πà‡∏≠‡∏≠‡∏≤‡∏¢‡∏∏';
      case 'CRITICAL': return `‡πÅ‡∏û‡πá‡∏Ñ‡πÄ‡∏Å‡∏à‡∏à‡∏∞‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡πÉ‡∏ô ${Math.abs(daysUntilExpiry)} ‡∏ß‡∏±‡∏ô`;
      case 'WARNING': return `‡πÅ‡∏û‡πá‡∏Ñ‡πÄ‡∏Å‡∏à‡∏à‡∏∞‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡πÉ‡∏ô ${daysUntilExpiry} ‡∏ß‡∏±‡∏ô`;
      default: return '‡πÅ‡∏û‡πá‡∏Ñ‡πÄ‡∏Å‡∏à‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡∏õ‡∏Å‡∏ï‡∏¥';
    }
  };

  const handleClose = () => {
    if (onMarkAsRead) {
      onMarkAsRead();
    }
    onClose();
  };

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50">
      <div className="bg-white rounded-lg shadow-xl max-w-md w-full mx-4 max-h-[90vh] overflow-y-auto">
        <div className="p-6">
          <div className="flex items-center justify-between mb-4">
            <h3 className="text-lg font-semibold text-gray-900">
              ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏û‡πá‡∏Ñ‡πÄ‡∏Å‡∏à‡∏´‡∏°‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ô
            </h3>
            <button
              onClick={onClose}
              className="text-gray-400 hover:text-gray-600 text-xl font-bold"
            >
              √ó
            </button>
          </div>

          <div className="space-y-4">
            {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏°‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ô */}
            <div className="bg-blue-50 p-4 rounded-lg">
              <h4 className="font-medium text-blue-800 mb-2">‡∏´‡∏°‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ô</h4>
              <p className="text-blue-700">
                {user?.villages?.[0]?.village_name || packageInfo.village_name || '‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏°‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ô'}
              </p>
            </div>

            {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏û‡πá‡∏Ñ‡πÄ‡∏Å‡∏à */}
            <div className="bg-gray-50 p-4 rounded-lg">
              <h4 className="font-medium text-gray-800 mb-2">‡πÅ‡∏û‡πá‡∏Ñ‡πÄ‡∏Å‡∏à‡∏õ‡∏±‡∏à‡∏à‡∏∏‡∏ö‡∏±‡∏ô</h4>
              <div className="flex items-center justify-between">
                <span className="text-gray-700">{packageInfo.package_name}</span>
                <span className={`px-2 py-1 rounded text-sm font-medium ${packageInfo.package_size === 'S' ? 'bg-blue-100 text-blue-800' :
                  packageInfo.package_size === 'M' ? 'bg-green-100 text-green-800' :
                    packageInfo.package_size === 'L' ? 'bg-purple-100 text-purple-800' :
                      packageInfo.package_size === 'XL' ? 'bg-orange-100 text-orange-800' :
                        'bg-gray-100 text-gray-800'
                  }`}>
                  {packageInfo.package_size}
                </span>
              </div>
              <p className="text-sm text-gray-600 mt-1">
                ‡∏ø{packageInfo.amount?.toLocaleString()} / {packageInfo.billing_cycle === 'monthly' ? '‡πÄ‡∏î‡∏∑‡∏≠‡∏ô' : '‡∏õ‡∏µ'}
              </p>
            </div>

            {/* ‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏ */}
            <div className={`p-4 rounded-lg border-l-4 ${getStatusColor(packageInfo.expiry_status)}`}>
              <div className="flex items-center">
                <span className="text-lg mr-2">{getStatusIcon(packageInfo.expiry_status)}</span>
                <div>
                  <p className="font-medium">
                    {getStatusMessage(packageInfo.expiry_status, packageInfo.days_until_expiry)}
                  </p>
                  <p className="text-sm mt-1">
                    ‡∏ß‡∏±‡∏ô‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏: {new Date(packageInfo.end_date).toLocaleDateString('th-TH')}
                  </p>
                </div>
              </div>
            </div>

            {/* ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô */}
            {packageInfo.usage_info && (
              <div className="bg-gray-50 p-4 rounded-lg">
                <h4 className="font-medium text-gray-800 mb-2">‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</h4>
                <div className="grid grid-cols-2 gap-4 text-sm">
                  <div>
                    <p className="text-gray-600">‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå</p>
                    <p className="font-medium">
                      {packageInfo.usage_info.current_meters}/{packageInfo.max_meters}
                    </p>
                    <div className="w-full bg-gray-200 rounded-full h-2 mt-1">
                      <div
                        className={`h-2 rounded-full ${packageInfo.usage_info.meter_usage_percent > 90 ? 'bg-red-500' :
                          packageInfo.usage_info.meter_usage_percent > 80 ? 'bg-orange-500' :
                            'bg-green-500'
                          }`}
                        style={{ width: `${Math.min(packageInfo.usage_info.meter_usage_percent, 100)}%` }}
                      ></div>
                    </div>
                    <p className="text-xs text-gray-500 mt-1">
                      {packageInfo.usage_info.meter_usage_percent}%
                    </p>
                  </div>
                  <div>
                    <p className="text-gray-600">‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</p>
                    <p className="font-medium">
                      {packageInfo.usage_info.current_users}/{packageInfo.max_users}
                    </p>
                    <div className="w-full bg-gray-200 rounded-full h-2 mt-1">
                      <div
                        className={`h-2 rounded-full ${packageInfo.usage_info.user_usage_percent > 90 ? 'bg-red-500' :
                          packageInfo.usage_info.user_usage_percent > 80 ? 'bg-orange-500' :
                            'bg-green-500'
                          }`}
                        style={{ width: `${Math.min(packageInfo.usage_info.user_usage_percent, 100)}%` }}
                      ></div>
                    </div>
                    <p className="text-xs text-gray-500 mt-1">
                      {packageInfo.usage_info.user_usage_percent}%
                    </p>
                  </div>
                </div>
              </div>
            )}

            {/* ‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÄ‡∏û‡∏¥‡πà‡∏°‡πÄ‡∏ï‡∏¥‡∏° */}
            {packageInfo.alerts && packageInfo.alerts.length > 0 && (
              <div className="bg-red-50 p-4 rounded-lg border-l-4 border-red-500">
                <h4 className="font-medium text-red-800 mb-2">‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô</h4>
                <ul className="text-sm text-red-700 space-y-1">
                  {packageInfo.alerts.map((alert, index) => (
                    <li key={index}>‚Ä¢ {alert}</li>
                  ))}
                </ul>
              </div>
            )}

            {/* ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ô‡∏µ‡πâ */}
            {packageInfo.monthly_stats && (
              <div className="bg-blue-50 p-4 rounded-lg">
                <h4 className="font-medium text-blue-800 mb-2">‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏ô‡∏µ‡πâ</h4>
                <div className="grid grid-cols-2 gap-2 text-sm">
                  <div>
                    <p className="text-blue-600">‡∏à‡∏î‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå</p>
                    <p className="font-medium">{packageInfo.monthly_stats.total_readings} ‡∏Ñ‡∏£‡∏±‡πâ‡∏á</p>
                  </div>
                  <div>
                    <p className="text-blue-600">‡∏ö‡∏¥‡∏•‡∏™‡∏£‡πâ‡∏≤‡∏á</p>
                    <p className="font-medium">{packageInfo.monthly_stats.total_bills} ‡πÉ‡∏ö</p>
                  </div>
                  <div>
                    <p className="text-blue-600">‡∏£‡∏≤‡∏¢‡πÑ‡∏î‡πâ</p>
                    <p className="font-medium">‡∏ø{packageInfo.monthly_stats.total_revenue?.toLocaleString()}</p>
                  </div>
                  <div>
                    <p className="text-blue-600">‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô</p>
                    <p className="font-medium">{packageInfo.monthly_stats.active_meters}</p>
                  </div>
                </div>
              </div>
            )}
          </div>

          {/* ‡∏õ‡∏∏‡πà‡∏°‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£ */}
          <div className="mt-6 flex gap-3">
            {packageInfo.expiry_status === 'EXPIRED' || packageInfo.expiry_status === 'CRITICAL' ? (
              <button
                className="flex-1 bg-red-600 hover:bg-red-700 text-white font-medium py-2 px-4 rounded transition-colors"
                onClick={() => {
                  // TODO: ‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ï‡πà‡∏≠‡∏≠‡∏≤‡∏¢‡∏∏
                }}
              >
                ‡∏ï‡∏¥‡∏î‡∏ï‡πà‡∏≠‡∏ï‡πà‡∏≠‡∏≠‡∏≤‡∏¢‡∏∏
              </button>
            ) : packageInfo.usage_info?.meter_usage_percent > 80 || packageInfo.usage_info?.user_usage_percent > 80 ? (
              <button
                className="flex-1 bg-orange-600 hover:bg-orange-700 text-white font-medium py-2 px-4 rounded transition-colors"
                onClick={() => {
                  // TODO: ‡πÄ‡∏õ‡∏¥‡∏î‡∏´‡∏ô‡πâ‡∏≤‡∏≠‡∏±‡∏û‡πÄ‡∏Å‡∏£‡∏î‡πÅ‡∏û‡πá‡∏Ñ‡πÄ‡∏Å‡∏à
                }}
              >
                ‡∏≠‡∏±‡∏û‡πÄ‡∏Å‡∏£‡∏î‡πÅ‡∏û‡πá‡∏Ñ‡πÄ‡∏Å‡∏à
              </button>
            ) : null}

            <button
              onClick={handleClose}
              className="flex-1 bg-gray-500 hover:bg-gray-600 text-white font-medium py-2 px-4 rounded transition-colors"
            >
              ‡∏£‡∏±‡∏ö‡∏ó‡∏£‡∏≤‡∏ö
            </button>
          </div>
        </div>
      </div>
    </div>
  );
};

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏£‡∏∞‡∏î‡∏±‡∏ö‡∏™‡∏¥‡∏ó‡∏ò‡∏¥‡πå‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ (admin ‡∏´‡∏£‡∏∑‡∏≠ village_admin)
const isAdminRole = (user) => {
  return user && (user.role_name === 'admin' || user.role_name === 'village_admin' || user.role_name === 'meter' );
};

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô admin ‡∏´‡∏°‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
const isVillageAdmin = (user) => {
  return user && (
    user.role_name === 'village_admin' ||
    user.role_name === '‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏´‡∏°‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ô' ||
    user.permissions?.includes('village_management')
  );
};

function App() {
  const [user, setUser] = useState(null);
  const [isFirstLogin, setIsFirstLogin] = useState(false);
  const [currentVillage, setCurrentVillage] = useState(null);
  const [isLoading, setIsLoading] = useState(true);
  const [authChecked, setAuthChecked] = useState(false);

  // Package Alert States
  const [showPackageAlert, setShowPackageAlert] = useState(false);
  const [packageInfo, setPackageInfo] = useState(null);
  const [packageAlertLoading, setPackageAlertLoading] = useState(false);

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Ñ‡∏ß‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà (Smart Alert System)
  const shouldShowAlert = (packageData, villageId) => {
    const today = new Date();
    const currentDate = today.toISOString().split('T')[0]; // YYYY-MM-DD format

    // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö‡πÑ‡∏ß‡πâ
    const alertHistoryKey = `package_alerts_${villageId}`;
    const alertHistory = JSON.parse(localStorage.getItem(alertHistoryKey) || '{}');

    const daysUntilExpiry = packageData.days_until_expiry;

    // ‡πÄ‡∏á‡∏∑‡πà‡∏≠‡∏ô‡πÑ‡∏Ç‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
    const shouldAlert = {
      expired: packageData.expiry_status === 'EXPIRED', // ‡πÅ‡∏à‡πâ‡∏á‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ñ‡πâ‡∏≤‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏
      critical: daysUntilExpiry <= 7 && daysUntilExpiry > 0, // 7 ‡∏ß‡∏±‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏
      twoMonths: daysUntilExpiry <= 60 && daysUntilExpiry > 30, // 2 ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏
      oneMonth: daysUntilExpiry <= 30 && daysUntilExpiry > 7, // 1 ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏
      usageHigh: packageData.usage_info?.meter_usage_percent > 90 ||
        packageData.usage_info?.user_usage_percent > 90
    };

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏õ‡∏£‡∏∞‡πÄ‡∏†‡∏ó
    let showAlert = false;
    let alertType = '';

    if (shouldAlert.expired) {
      // ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ó‡∏∏‡∏Å‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡∏ñ‡πâ‡∏≤‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡πÅ‡∏•‡πâ‡∏ß
      showAlert = true;
      alertType = 'expired';
    } else if (shouldAlert.critical && !alertHistory[`critical_${currentDate}`]) {
      // ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô 7 ‡∏ß‡∏±‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏ (‡πÅ‡∏à‡πâ‡∏á‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô)
      showAlert = true;
      alertType = 'critical';
    } else if (shouldAlert.oneMonth && !alertHistory['oneMonth']) {
      // ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô 1 ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏ (‡πÅ‡∏à‡πâ‡∏á‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß)
      showAlert = true;
      alertType = 'oneMonth';
    } else if (shouldAlert.twoMonths && !alertHistory['twoMonths']) {
      // ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô 2 ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô‡∏Å‡πà‡∏≠‡∏ô‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏ (‡πÅ‡∏à‡πâ‡∏á‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß)
      showAlert = true;
      alertType = 'twoMonths';
    } else if (shouldAlert.usageHigh && !alertHistory[`usage_${currentDate}`]) {
      // ‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏™‡∏π‡∏á (‡πÅ‡∏à‡πâ‡∏á‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÄ‡∏î‡∏µ‡∏¢‡∏ß‡∏ï‡πà‡∏≠‡∏ß‡∏±‡∏ô)
      showAlert = true;
      alertType = 'usage';
    }

    // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
    if (showAlert && alertType) {
      const updatedHistory = { ...alertHistory };

      if (alertType === 'critical' || alertType === 'usage') {
        updatedHistory[`${alertType}_${currentDate}`] = true;
      } else {
        updatedHistory[alertType] = true;
      }

      localStorage.setItem(alertHistoryKey, JSON.stringify(updatedHistory));

      // ‡∏•‡∏ö‡∏õ‡∏£‡∏∞‡∏ß‡∏±‡∏ï‡∏¥‡πÄ‡∏Å‡πà‡∏≤‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πà‡∏≤‡∏Å‡∏ß‡πà‡∏≤ 90 ‡∏ß‡∏±‡∏ô
      const cleanupHistory = {};
      const cutoffDate = new Date(today.getTime() - 90 * 24 * 60 * 60 * 1000);

      Object.keys(updatedHistory).forEach(key => {
        if (key.includes('_')) {
          const keyDate = key.split('_')[1];
          if (new Date(keyDate) >= cutoffDate) {
            cleanupHistory[key] = updatedHistory[key];
          }
        } else {
          cleanupHistory[key] = updatedHistory[key];
        }
      });

      localStorage.setItem(alertHistoryKey, JSON.stringify(cleanupHistory));
    }

    return showAlert;
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏û‡πá‡∏Ñ‡πÄ‡∏Å‡∏à‡∏Ç‡∏≠‡∏á‡∏´‡∏°‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ô
  const fetchVillagePackageInfo = async (userData) => {
    try {
      // ‡πÄ‡∏ä‡πá‡∏Ñ‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏õ‡πá‡∏ô admin ‡∏´‡∏°‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
      if (!isVillageAdmin(userData)) {
        return; // ‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà admin ‡∏´‡∏°‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ô
      }

      setPackageAlertLoading(true);

      // ‡∏´‡∏≤ village_id ‡∏à‡∏≤‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
      const villageId = userData.village_id ||
        userData.assigned_village_id ||
        userData.villages?.[0]?.village_id ||
        currentVillage?.village_id;

      if (!villageId) {
        return;
      }

      // ‡∏î‡∏∂‡∏á token ‡∏à‡∏≤‡∏Å localStorage
      const token = localStorage.getItem('auth_token');

      // ‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡∏°‡∏µ token ‡πÉ‡∏´‡πâ‡∏Ç‡πâ‡∏≤‡∏°‡∏Å‡∏≤‡∏£‡πÄ‡∏£‡∏µ‡∏¢‡∏Å API
      if (!token) {
        return;
      }

      // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏û‡πá‡∏Ñ‡πÄ‡∏Å‡∏à‡∏Ç‡∏≠‡∏á‡∏´‡∏°‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ô ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏™‡πà‡∏á token
      const response = await axios.get(
        `https://api.abchomey.com/api/villages/${villageId}/package-info`,
        {
          headers: {
            'Authorization': `Bearer ${token}`,
            'Content-Type': 'application/json'
          }
        }
      );

      if (response.data && response.data.success) {
        const packageData = response.data.data;

        // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏Ñ‡∏ß‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
        const shouldAlert = shouldShowAlert(packageData, villageId);

        if (!shouldAlert) {
          return; // ‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
        }

        // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ï‡∏≤‡∏°‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
        const alerts = [];

        if (packageData.expiry_status === 'EXPIRED') {
          alerts.push('‡πÅ‡∏û‡πá‡∏Ñ‡πÄ‡∏Å‡∏à‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡πÅ‡∏•‡πâ‡∏ß ‡∏£‡∏∞‡∏ö‡∏ö‡∏≠‡∏≤‡∏à‡∏´‡∏¢‡∏∏‡∏î‡∏ó‡∏≥‡∏á‡∏≤‡∏ô');
        } else if (packageData.days_until_expiry <= 7 && packageData.days_until_expiry > 0) {
          alerts.push('‡πÅ‡∏û‡πá‡∏Ñ‡πÄ‡∏Å‡∏à‡∏à‡∏∞‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡πÉ‡∏ô‡∏≠‡∏µ‡∏Å‡πÑ‡∏°‡πà‡∏Å‡∏µ‡πà‡∏ß‡∏±‡∏ô');
        } else if (packageData.days_until_expiry <= 30 && packageData.days_until_expiry > 7) {
          alerts.push('‡πÅ‡∏û‡πá‡∏Ñ‡πÄ‡∏Å‡∏à‡∏à‡∏∞‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡πÉ‡∏ô‡∏≠‡∏µ‡∏Å 1 ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏ï‡πà‡∏≠‡∏≠‡∏≤‡∏¢‡∏∏');
        } else if (packageData.days_until_expiry <= 60 && packageData.days_until_expiry > 30) {
          alerts.push('‡πÅ‡∏û‡πá‡∏Ñ‡πÄ‡∏Å‡∏à‡∏à‡∏∞‡∏´‡∏°‡∏î‡∏≠‡∏≤‡∏¢‡∏∏‡πÉ‡∏ô‡∏≠‡∏µ‡∏Å 2 ‡πÄ‡∏î‡∏∑‡∏≠‡∏ô ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏ß‡∏≤‡∏á‡πÅ‡∏ú‡∏ô‡∏ï‡πà‡∏≠‡∏≠‡∏≤‡∏¢‡∏∏');
        }

        if (packageData.usage_info?.meter_usage_percent > 90) {
          alerts.push('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÉ‡∏Å‡∏•‡πâ‡πÄ‡∏ï‡πá‡∏°‡πÅ‡∏•‡πâ‡∏ß (‡πÄ‡∏Å‡∏¥‡∏ô 90%)');
        } else if (packageData.usage_info?.meter_usage_percent > 80) {
          alerts.push('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏™‡∏π‡∏á (‡πÄ‡∏Å‡∏¥‡∏ô 80%)');
        }

        if (packageData.usage_info?.user_usage_percent > 90) {
          alerts.push('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡πÉ‡∏Å‡∏•‡πâ‡πÄ‡∏ï‡πá‡∏°‡πÅ‡∏•‡πâ‡∏ß (‡πÄ‡∏Å‡∏¥‡∏ô 90%)');
        } else if (packageData.usage_info?.user_usage_percent > 80) {
          alerts.push('‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏™‡∏π‡∏á (‡πÄ‡∏Å‡∏¥‡∏ô 80%)');
        }

        const enhancedPackageData = {
          ...packageData,
          alerts: alerts
        };

        setPackageInfo(enhancedPackageData);

        // ‡πÅ‡∏™‡∏î‡∏á‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô
        setTimeout(() => {
          setShowPackageAlert(true);
        }, 1000);
      }
    } catch (err) {
      console.error('Error fetching package info:', err);

      // ‡∏ñ‡πâ‡∏≤ error ‡πÄ‡∏õ‡πá‡∏ô 401 (Unauthorized) ‡πÉ‡∏´‡πâ logout
      if (err.response?.status === 401) {
        handleLogout();
      }

      // ‡πÑ‡∏°‡πà‡πÅ‡∏™‡∏î‡∏á‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏û‡πá‡∏Ñ‡πÄ‡∏Å‡∏à ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏£‡∏ö‡∏Å‡∏ß‡∏ô‡∏Å‡∏≤‡∏£‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô
    } finally {
      setPackageAlertLoading(false);
    }
  };
  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ó‡∏≥‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡∏ß‡πà‡∏≤‡∏≠‡πà‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß
  const markPackageAlertsAsRead = async () => {
    try {
      if (!packageInfo || !packageInfo.village_id) return;

      // await axios.post(`/api/villages/${packageInfo.village_id}/package-alerts/mark-read`);
    } catch (error) {
      console.error('Error marking alerts as read:', error);
    }
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏à‡∏≤‡∏Å localStorage
  const checkAuth = () => {
    setIsLoading(true);

    try {
      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
      const storedUser = localStorage.getItem('waterSystemUser');
      const storedVillage = localStorage.getItem('currentVillage');


      if (storedUser && storedUser !== 'undefined') {
        try {
          const parsedData = JSON.parse(storedUser);

          let userData = null;
          // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏•‡∏∞‡∏Å‡∏≥‡∏´‡∏ô‡∏î‡∏Ñ‡πà‡∏≤‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö user state
          if (parsedData.data && parsedData.data.user) {
            userData = parsedData.data.user;
          } else if (parsedData.user) {
            userData = parsedData.user;
          } else {
            userData = parsedData; // ‡∏Å‡∏£‡∏ì‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÇ‡∏î‡∏¢‡∏ï‡∏£‡∏á
          }

          setUser(userData);

          // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å‡∏Ç‡∏≠‡∏á‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
          const hasConfigured = localStorage.getItem('hasConfiguredWaterSource');
          if (isVillageAdmin(userData) && !hasConfigured) {
            // setIsFirstLogin(true);
          }

          // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏û‡πá‡∏Ñ‡πÄ‡∏Å‡∏à‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö admin ‡∏´‡∏°‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ô (‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å auth check ‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô)
          if (isVillageAdmin(userData)) {
            setTimeout(() => {
              fetchVillagePackageInfo(userData);
            }, 2000); // ‡∏£‡∏≠‡πÉ‡∏´‡πâ‡∏£‡∏∞‡∏ö‡∏ö‡πÇ‡∏´‡∏•‡∏î‡πÄ‡∏™‡∏£‡πá‡∏à‡∏Å‡πà‡∏≠‡∏ô
          }

        } catch (error) {
          console.error('Error parsing user data from localStorage:', error);
          localStorage.removeItem('waterSystemUser'); // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
          setUser(null);
        }
      } else {
        setUser(null);
      }

      // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏´‡∏°‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ô
      if (storedVillage && storedVillage !== 'undefined') {
        try {
          setCurrentVillage(JSON.parse(storedVillage));
        } catch (error) {
          console.error('Error parsing village data from localStorage:', error);
          localStorage.removeItem('currentVillage'); // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á
          setCurrentVillage(null);
        }
      } else {
        setCurrentVillage(null);
      }
    } catch (error) {
      console.error('Error checking authentication:', error);
      setUser(null);
      setCurrentVillage(null);
    } finally {
      setIsLoading(false);
      setAuthChecked(true);
    }
  };

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÇ‡∏´‡∏•‡∏î‡πÅ‡∏≠‡∏û
  useEffect(() => {
    checkAuth();

    // ‡∏£‡∏±‡∏ö‡∏ü‡∏±‡∏á‡πÄ‡∏´‡∏ï‡∏∏‡∏Å‡∏≤‡∏£‡∏ì‡πå‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡πÅ‡∏õ‡∏•‡∏á‡πÉ‡∏ô localStorage
    const handleStorageChange = () => {
      checkAuth();
    };

    window.addEventListener('storage', handleStorageChange);

    // ‡∏ó‡∏≥‡∏Ñ‡∏ß‡∏≤‡∏°‡∏™‡∏∞‡∏≠‡∏≤‡∏î‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏Ñ‡∏≠‡∏°‡πÇ‡∏û‡πÄ‡∏ô‡∏ô‡∏ï‡πå‡∏ñ‡∏π‡∏Å‡∏ó‡∏≥‡∏•‡∏≤‡∏¢
    return () => {
      window.removeEventListener('storage', handleStorageChange);
    };
  }, []);

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö
  const handleLogin = async (userData) => {

    let user = null;
    // ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡πÅ‡∏≠‡∏û
    if (userData.data && userData.data.user) {
      user = userData.data.user;
    } else if (userData.user) {
      user = userData.user;
    } else {
      user = userData;
    }

    setUser(user);

    // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô‡∏ú‡∏π‡πâ‡∏î‡∏π‡πÅ‡∏•‡∏´‡∏°‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
    if (isVillageAdmin(user)) {
      const hasConfigured = localStorage.getItem('hasConfiguredWaterSource');
      if (!hasConfigured) {
        setIsFirstLogin(true);
      }

      // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏û‡πá‡∏Ñ‡πÄ‡∏Å‡∏à‡∏Ç‡∏≠‡∏á‡∏´‡∏°‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ô (‡∏´‡∏•‡∏±‡∏á‡∏à‡∏≤‡∏Å‡∏•‡πá‡∏≠‡∏Å‡∏≠‡∏¥‡∏ô‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à)
      await fetchVillagePackageInfo(user);
    }

    // ‡∏ó‡∏£‡∏¥‡∏Å‡πÄ‡∏Å‡∏≠‡∏£‡πå‡∏≠‡∏µ‡πÄ‡∏ß‡∏ô‡∏ï‡πå storage ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡πÉ‡∏´‡πâ‡πÅ‡∏≠‡∏û‡∏≠‡∏∑‡πà‡∏ô‡πÜ ‡∏£‡∏π‡πâ‡∏ß‡πà‡∏≤‡∏°‡∏µ‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö
    window.dispatchEvent(new Event('storage'));
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏≠‡∏≠‡∏Å‡∏à‡∏≤‡∏Å‡∏£‡∏∞‡∏ö‡∏ö
  const handleLogout = () => {
    // ‡∏•‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏à‡∏≤‡∏Å localStorage
    localStorage.removeItem('waterSystemUser');
    localStorage.removeItem('auth_token');
    localStorage.removeItem('tokenExpiration');
    localStorage.removeItem('currentVillage');

    // ‡∏£‡∏µ‡πÄ‡∏ã‡πá‡∏ï‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞
    setUser(null);
    setCurrentVillage(null);
    setIsFirstLogin(false);
    setShowPackageAlert(false);
    setPackageInfo(null);

    // ‡∏ó‡∏£‡∏¥‡∏Å‡πÄ‡∏Å‡∏≠‡∏£‡πå‡∏≠‡∏µ‡πÄ‡∏ß‡∏ô‡∏ï‡πå storage
    window.dispatchEvent(new Event('storage'));
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏°‡∏∑‡πà‡∏≠‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å‡πÄ‡∏™‡∏£‡πá‡∏à‡∏™‡∏¥‡πâ‡∏ô
  const handleSourceConfigured = () => {
    setIsFirstLogin(false);
    localStorage.setItem('hasConfiguredWaterSource', 'true');
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô‡∏´‡∏°‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ô
  const handleVillageChange = async (village) => {
    //console.log('Village changed to:', village);
    setCurrentVillage(village);
    localStorage.setItem('currentVillage', JSON.stringify(village));

    // ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡πÅ‡∏û‡πá‡∏Ñ‡πÄ‡∏Å‡∏à‡πÉ‡∏´‡∏°‡πà‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏°‡∏π‡πà‡∏ö‡πâ‡∏≤‡∏ô‡∏ó‡∏µ‡πà‡πÄ‡∏õ‡∏•‡∏µ‡πà‡∏¢‡∏ô
    if (isVillageAdmin(user) && village?.village_id) {
      await fetchVillagePackageInfo({ ...user, village_id: village.village_id });
    }

    // ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Å‡∏≤‡∏£‡∏™‡πà‡∏á event
    eventBus.emit('village-changed', village);
    // ‡∏ó‡∏£‡∏¥‡∏Å‡πÄ‡∏Å‡∏≠‡∏£‡πå storage event
    window.dispatchEvent(new Event('storage'));
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏¥‡∏î‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÅ‡∏û‡πá‡∏Ñ‡πÄ‡∏Å‡∏à
  const handleClosePackageAlert = () => {
    setShowPackageAlert(false);
  };

  // ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏õ‡∏¥‡∏î‡πÅ‡∏à‡πâ‡∏á‡πÄ‡∏ï‡∏∑‡∏≠‡∏ô‡πÅ‡∏•‡∏∞‡∏ó‡∏≥‡πÄ‡∏Ñ‡∏£‡∏∑‡πà‡∏≠‡∏á‡∏´‡∏°‡∏≤‡∏¢‡∏ß‡πà‡∏≤‡∏≠‡πà‡∏≤‡∏ô‡πÅ‡∏•‡πâ‡∏ß
  const handleMarkAsReadAndClose = async () => {
    await markPackageAlertsAsRead();
    setShowPackageAlert(false);
  };

  // ‡πÅ‡∏™‡∏î‡∏á‡∏™‡∏ñ‡∏≤‡∏ô‡∏∞‡∏Å‡∏≤‡∏£‡πÇ‡∏´‡∏•‡∏î‡∏ñ‡πâ‡∏≤‡∏¢‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö‡πÑ‡∏°‡πà‡πÄ‡∏™‡∏£‡πá‡∏à
  if (isLoading && !authChecked) {
    return (
      <div className="loading-container flex items-center justify-center min-h-screen">
        <div className="text-center">
          <LoadingSpinner />
          <p className="mt-4 text-gray-600">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...</p>
        </div>
      </div>
    );
  }

  // ‡∏Ñ‡∏≠‡∏°‡πÇ‡∏û‡πÄ‡∏ô‡∏ô‡∏ï‡πå‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡πÄ‡∏•‡∏¢‡πå‡πÄ‡∏≠‡∏≤‡∏ï‡πå‡∏´‡∏•‡∏±‡∏Å‡∏Ç‡∏≠‡∏á‡πÅ‡∏≠‡∏û
  const AppLayout = () => {
    return (
      <MainLayout
        user={user}
        onLogout={handleLogout}
        currentVillage={currentVillage}
        onVillageChange={handleVillageChange}
      >
        <Outlet />
      </MainLayout>
    );
  };

  // ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡πÄ‡∏õ‡πá‡∏ô‡πÅ‡∏≠‡∏î‡∏°‡∏¥‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
  const isAdminUser = isAdminRole(user);
  //console.log('Current user:', user);
  console.log('Is admin user:', isAdminUser);
  //console.log('Is village admin:', isVillageAdmin(user));

  return (
    <Router>
      <div className="app">
        <Routes>
          {/* ‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö */}
          <Route path="/login" element={
            user ? (
              <Navigate to="/" replace />
            ) : (
              <Login onLogin={handleLogin} />
            )
          } />

          {/* ‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏≤‡∏£‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏£‡∏∞‡∏ö‡∏ö‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å (‡πÑ‡∏°‡πà‡∏°‡∏µ sidebar ‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡πÄ‡∏õ‡πá‡∏ô wizard ‡πÅ‡∏ö‡∏ö‡πÄ‡∏ï‡πá‡∏°‡∏´‡∏ô‡πâ‡∏≤‡∏à‡∏≠) */}
          <Route path="/setup" element={
            !user ? (
              <Navigate to="/login" replace />
            ) : isAdminUser && isFirstLogin ? (
              <WaterSourceSelection
                onConfigured={handleSourceConfigured}
                user={user}
                currentVillage={currentVillage}
              />
            ) : (
              <Navigate to="/" replace />
            )
          } />

          {/* ‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏´‡∏•‡∏±‡∏Å‡∏ó‡∏µ‡πà‡∏°‡∏µ MainLayout (‡∏°‡∏µ sidebar) */}
          <Route element={
            !user ? (
              <Navigate to="/login" replace />
            ) : (
              <AppLayout />
            )
          }>
            {/* ‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å - ‡πÅ‡∏î‡∏ä‡∏ö‡∏≠‡∏£‡πå‡∏î */}
            <Route path="/" element={
              isAdminUser ? (
                <AdminDashboard user={user} currentVillage={currentVillage} />
              ) : (
                <UserDashboard user={user} currentVillage={currentVillage} />
              )
            } />

            {/* ‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏´‡∏ô‡πâ‡∏≤‡∏ï‡πà‡∏≤‡∏á‡πÜ ‡∏Ç‡∏≠‡∏á‡∏£‡∏∞‡∏ö‡∏ö */}
            <Route path="/village-manage" element={
              !isAdminUser ? <Navigate to="/" /> :
                <VillageManage user={user} currentVillage={currentVillage} />
            } />

            <Route path="/village-settings" element={
              !isAdminUser ? <Navigate to="/" /> :
                <VillageSettings user={user} currentVillage={currentVillage} />
            } />

            <Route path="/water-meters" element={
              !user ? <Navigate to="/login" /> :
                <WaterMeterManagement user={user} currentVillage={currentVillage} />
            } />

            <Route path="/meter-readings" element={
              !user ? <Navigate to="/login" /> :
                <MeterReadings user={user} currentVillage={currentVillage} />
            } />

            <Route path="/zone" element={
              !user ? <Navigate to="/login" /> :
                <ZoneManagement user={user} currentVillage={currentVillage} />
            } />



            <Route path="/billing" element={
              !user ? <Navigate to="/login" /> :
                <BillingManagement user={user} currentVillage={currentVillage} />
            } />

            <Route path="/payments" element={
              !user ? <Navigate to="/login" /> :
                <PaymentManagement user={user} currentVillage={currentVillage} />
            } />

            <Route path="/equipment" element={
              !isAdminUser ? <Navigate to="/" /> :
                <EquipmentManagement user={user} currentVillage={currentVillage} />
            } />

            <Route path="/reports" element={
              !user ? <Navigate to="/login" /> :
                <ReportsAnalytics user={user} currentVillage={currentVillage} />
            } />

            <Route path="/users" element={
              !isAdminUser ? <Navigate to="/" /> :
                <UserManagement user={user} currentVillage={currentVillage} />
            } />
          </Route>

          {/* ‡πÄ‡∏™‡πâ‡∏ô‡∏ó‡∏≤‡∏á‡πÄ‡∏£‡∏¥‡πà‡∏°‡∏ï‡πâ‡∏ô - ‡πÉ‡∏´‡πâ‡πÑ‡∏õ‡∏ó‡∏µ‡πà‡∏´‡∏ô‡πâ‡∏≤‡πÅ‡∏£‡∏Å */}
          <Route path="*" element={<Navigate to="/" replace />} />
        </Routes>

        {/* Package Alert Modal */}
        {showPackageAlert && packageInfo && (
          <PackageAlert
            packageInfo={packageInfo}
            onClose={handleClosePackageAlert}
            onMarkAsRead={handleMarkAsReadAndClose}
            user={user}
          />
        )}

        {/* Package Loading Indicator */}
        {packageAlertLoading && (
          <div className="fixed bottom-4 right-4 bg-blue-100 border border-blue-300 rounded-lg px-4 py-2 shadow-lg">
            <div className="flex items-center space-x-2">
              <div className="animate-spin rounded-full h-4 w-4 border-b-2 border-blue-600"></div>
              <span className="text-blue-700 text-sm">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡πÅ‡∏û‡πá‡∏Ñ‡πÄ‡∏Å‡∏à...</span>
            </div>
          </div>
        )}
      </div>
    </Router>
  );
}

export default App;